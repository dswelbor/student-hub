"""
Django settings for hub project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import json
import os
# Exception for improperly configured settings
from django.core.exceptions import ImproperlyConfigured

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Sample settings file available as settings_sample.json - modify as appropriate
# Load JSON settings from settings.json
with open(os.path.join(BASE_DIR, 'config/settings.json')) as f:
    json_settings = json.load(f)


def get_setting(key, settings=json_settings) :
    """
    Get the settings from the loaded json settings file
    :param key: settings key
    :param settings: loaded json settings
    :return: setting value
    """
    try:
        return settings[key]

    except KeyError:
        # Could not find key
        e_msg = 'Could not find the {0} setting in settings.json.'.format(key)
        raise ImproperlyConfigured(e_msg)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_setting("SECRET_KEY")


# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = get_setting("DEBUG")

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hub.apps',  # StudentHub home
    'users.apps.UsersConfig',  # custom user model
    # Games
    'games.trivia.apps.TriviaConfig',
    # Academics
    'academics.flashcard.apps.FlashcardConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hub.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': get_setting("DATABASE_ENGINE"),
        'NAME': get_setting("DATABASE_NAME"),
        'USER': get_setting("USERNAME"),
        'PASSWORD': get_setting("PASSWORD"),
        'HOST': get_setting("DATABASE_HOST"),
        'PORT': get_setting("DATABASE_PORT")
    }
    # "DATABASE_ENGINE": "<db_engine>",
    # "DATABASE_NAME": "<db_name>",
    # "DATABASE_HOST": "<db_host>",
    # "DATABASE_PORT": "<db_port>",
    # "USERNAME": "<db_username>",
    # "PASSWORD": "<db_password>"
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'users.HubUser'  # Uses custom user model

LOGIN_REDIRECT_URL = '/'  # Redirects users to the page index on manual login

LOGOUT_REDIRECT_URL = '/'   # Redirects users to the page index on manual logout
